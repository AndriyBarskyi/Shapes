package com.testmatick.generator;

import java.util.Random;

import com.testmatick.shapes.Circle;
import com.testmatick.shapes.Color;
import com.testmatick.shapes.RightTriangle;
import com.testmatick.shapes.Square;
import com.testmatick.shapes.Trapezoid;

/**
 * The RandomShapeFactory class is an implementation of the ShapeFactory interface
 * that generates random shapes with customizable features such as length and color.
 * This factory is capable of producing Circle, Square, Trapezoid, and RightTriangle shapes.
 * It uses a Random object to randomize the shape attributes.
 *
 * <p>Shapes generated by this factory have random lengths within a specified maximum length,
 * and their colors are selected randomly from a predefined set of colors.
 *
 * <p><b>Note:</b> If a custom maximum length is not provided during instantiation, the default
 * maximum length is set to 10 units.
 *
 * <p><b>Example usage:</b>
 * <pre>{@code
 * RandomShapeFactory factory = new RandomShapeFactory(20.0); // Max length of 20 units
 * Circle circle = factory.createCircle(); // Random circle with length and color
 * Square square = factory.createSquare(); // Random square with length and color
 * Trapezoid trapezoid = factory.createTrapezoid(); // Random trapezoid with length, width, and color
 * RightTriangle rightTriangle = factory.createRightTriangle(); // Random right triangle with two legs and color
 * }</pre>
 *
 * <p><b>Thread Safety:</b>
 * The RandomShapeFactory class is not thread-safe. If multiple threads access an instance of
 * this class concurrently and modify the Random object, unexpected behavior may occur.
 * To ensure thread safety, external synchronization should be used.
 *
 * @see AbstractShapeFactory
 * @see Circle
 * @see Square
 * @see Trapezoid
 * @see RightTriangle
 * @see Color
 */
public class RandomShapeFactory implements AbstractShapeFactory {
    private static final double DEFAULT_MAX_LENGTH = 10.0;

    private final Double maxLength;
    private final Random random = new Random();
    private final Color[] colors = Color.values();

    public RandomShapeFactory(Double maxLength) {
        this.maxLength = maxLength;
    }

    public RandomShapeFactory() {
        this(DEFAULT_MAX_LENGTH);
    }

    public Circle createCircle() {
        return new Circle(getRandomColor(), getRandomLength());
    }

    public Square createSquare() {
        return new Square(getRandomColor(), getRandomLength());
    }


    public Trapezoid createTrapezoid() {
        return new Trapezoid(getRandomColor(), getRandomLength(), getRandomLength(), getRandomLength());
    }

    public RightTriangle createRightTriangle() {
        return new RightTriangle(getRandomColor(), getRandomLength(), getRandomLength());
    }

    private double getRandomLength() {
        return random.nextDouble() * maxLength;
    }

    private Color getRandomColor() {
        return colors[random.nextInt(colors.length)];
    }
}

